/*
 * DialogCreateCompetition.java
 * Provides GUI for creating a new SwimmingCompetition.
 * 
 */
package swimmingcompetition.ux;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import swimmingcompetition.simulator.SwimmingCompetition;
import swimmingcompetition.ux.viewmodels.ModelCreateCompetition;
import swimmingcompetition.ux.viewmodels.UIUpdater;

/**
 *
 * @author Wickramaranga
 */
public class DialogCreateCompetition extends javax.swing.JDialog {

    private final ModelCreateCompetition competitionModel;
    private boolean okay;

    /**
     * Creates new form DialogCreateCompetition
     *
     * @param parent Parent form of this form.
     * @param modal Whether dialog is a modal dialog.
     */
    public DialogCreateCompetition(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        competitionModel = new ModelCreateCompetition();
        okay = false;

        initComponents();

        // Set list models. 
        jListSwimmers.setModel(new DefaultListModel());
        jListJudges.setModel(new DefaultListModel());
        jListSpectators.setModel(new DefaultListModel());
        jListStaff.setModel(new DefaultListModel());

        competitionModel.setUpdater(new UIUpdater() {
            @Override
            public void updateUI(String partToUpdate) {
                switch (partToUpdate) {
                    case "Swimmer":
                        DefaultListModel<String> swimmerListModel
                                = ((DefaultListModel<String>) jListSwimmers.getModel());
                        swimmerListModel.clear();
                        for (int i = 0; i < competitionModel.getSwimmerCount(); i++) {
                            swimmerListModel.addElement(competitionModel.getSwimmer(i));
                        }
                        break;
                    case "Judge":
                        DefaultListModel<String> judgeListModel
                                = ((DefaultListModel<String>) jListJudges.getModel());
                        judgeListModel.clear();
                        for (int i = 0; i < competitionModel.getJudgesCount(); i++) {
                            judgeListModel.addElement(competitionModel.getJudge(i));
                        }
                        break;
                    case "Spectator":
                        DefaultListModel<String> spectatorListModel
                                = ((DefaultListModel<String>) jListSpectators.getModel());
                        spectatorListModel.clear();
                        for (int i = 0; i < competitionModel.getSpectatorCount(); i++) {
                            spectatorListModel.addElement(competitionModel.getSpectator(i));
                        }
                        break;
                    case "SupportingStaffMember":
                        DefaultListModel<String> staffListModel
                                = ((DefaultListModel<String>) jListStaff.getModel());
                        staffListModel.clear();
                        for (int i = 0; i < competitionModel.getSupportingStaffMemberCount(); i++) {
                            staffListModel.addElement(competitionModel.getSupportingStaffMember(i));
                        }
                        break;
                    case "PoolLength":
                        jFormattedTextLength.setText(
                                String.valueOf(competitionModel.getPoolLength()));
                        break;
                    case "Message":
                        jLabelMsg.setText(competitionModel.getMessage());
                        break;
                    default:
                        assert false; // Not supposed to happen. 
                        break;
                }
            }
        });

        jButtonOk.setEnabled(competitionModel.isValid());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupRemove = new javax.swing.JPopupMenu();
        jMIRemoveJudge = new javax.swing.JMenuItem();
        jMIRemoveSpectator = new javax.swing.JMenuItem();
        jMIRemoveStaff = new javax.swing.JMenuItem();
        jPopupAddRandom = new javax.swing.JPopupMenu();
        jMIAddRandomJudge = new javax.swing.JMenuItem();
        jMIAddRandomSpectator = new javax.swing.JMenuItem();
        jMIAddRandomStaff = new javax.swing.JMenuItem();
        jPanelSwimmers = new javax.swing.JPanel();
        jLabelSwimmers = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSwimmers = new javax.swing.JList();
        jButtonAddSwimmer = new javax.swing.JButton();
        jButtonRemoveSwimmer = new javax.swing.JButton();
        jPanelPeople = new javax.swing.JPanel();
        jLabelJudges = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListJudges = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListSpectators = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListStaff = new javax.swing.JList();
        jLabelSpectators = new javax.swing.JLabel();
        jLabelStaff = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jPanelPool = new javax.swing.JPanel();
        jLabelPool = new javax.swing.JLabel();
        jLabelLanes = new javax.swing.JLabel();
        jSpinnerLanes = new javax.swing.JSpinner();
        jLabelLength = new javax.swing.JLabel();
        jFormattedTextLength = new javax.swing.JFormattedTextField();
        jLabelLengthM = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();
        jLabelMsg = new javax.swing.JLabel();

        jPopupRemove.setInvoker(jButtonRemove);

        jMIRemoveJudge.setText("Judge");
        jMIRemoveJudge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRemoveJudgeActionPerformed(evt);
            }
        });
        jPopupRemove.add(jMIRemoveJudge);

        jMIRemoveSpectator.setText("Spectator");
        jMIRemoveSpectator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRemoveSpectatorActionPerformed(evt);
            }
        });
        jPopupRemove.add(jMIRemoveSpectator);

        jMIRemoveStaff.setText("Supporting Staff Member");
        jMIRemoveStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRemoveStaffActionPerformed(evt);
            }
        });
        jPopupRemove.add(jMIRemoveStaff);

        jMIAddRandomJudge.setText("Judge");
        jPopupAddRandom.add(jMIAddRandomJudge);

        jMIAddRandomSpectator.setText("Spectator");
        jPopupAddRandom.add(jMIAddRandomSpectator);

        jMIAddRandomStaff.setText("Supporting Staff Member");
        jPopupAddRandom.add(jMIAddRandomStaff);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New competition");
        setModal(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        jLabelSwimmers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSwimmers.setText("Swimmers");

        jScrollPane1.setViewportView(jListSwimmers);

        jButtonAddSwimmer.setBackground(new java.awt.Color(0, 204, 204));
        jButtonAddSwimmer.setMnemonic('a');
        jButtonAddSwimmer.setText("Add...");
        jButtonAddSwimmer.setToolTipText("");
        jButtonAddSwimmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSwimmerActionPerformed(evt);
            }
        });

        jButtonRemoveSwimmer.setBackground(new java.awt.Color(0, 204, 204));
        jButtonRemoveSwimmer.setMnemonic('r');
        jButtonRemoveSwimmer.setText("Remove");
        jButtonRemoveSwimmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveSwimmerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSwimmersLayout = new javax.swing.GroupLayout(jPanelSwimmers);
        jPanelSwimmers.setLayout(jPanelSwimmersLayout);
        jPanelSwimmersLayout.setHorizontalGroup(
            jPanelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSwimmersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSwimmersLayout.createSequentialGroup()
                        .addGroup(jPanelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSwimmers)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jPanelSwimmersLayout.createSequentialGroup()
                        .addComponent(jButtonAddSwimmer, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemoveSwimmer)))
                .addContainerGap())
        );
        jPanelSwimmersLayout.setVerticalGroup(
            jPanelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSwimmersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSwimmers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRemoveSwimmer)
                    .addComponent(jButtonAddSwimmer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelJudges.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelJudges.setText("Judges");

        jScrollPane2.setViewportView(jListJudges);

        jScrollPane3.setViewportView(jListSpectators);

        jScrollPane4.setViewportView(jListStaff);

        jLabelSpectators.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSpectators.setText("Spectators");

        jLabelStaff.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStaff.setText("Support Staff");

        jButtonAdd.setBackground(new java.awt.Color(0, 204, 204));
        jButtonAdd.setMnemonic('d');
        jButtonAdd.setText("Add...");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemove.setBackground(new java.awt.Color(0, 204, 204));
        jButtonRemove.setMnemonic('v');
        jButtonRemove.setText("Remove>");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPeopleLayout = new javax.swing.GroupLayout(jPanelPeople);
        jPanelPeople.setLayout(jPanelPeopleLayout);
        jPanelPeopleLayout.setHorizontalGroup(
            jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeopleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeopleLayout.createSequentialGroup()
                        .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelJudges)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSpectators)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeopleLayout.createSequentialGroup()
                        .addComponent(jLabelStaff)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelPeopleLayout.createSequentialGroup()
                        .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addGroup(jPanelPeopleLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonRemove)))
                        .addContainerGap())))
        );
        jPanelPeopleLayout.setVerticalGroup(
            jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeopleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPeopleLayout.createSequentialGroup()
                        .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelStaff, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelSpectators))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanelPeopleLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPeopleLayout.createSequentialGroup()
                        .addComponent(jLabelJudges)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPeopleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonRemove))
                .addContainerGap())
        );

        jLabelPool.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPool.setText("Swimming Pool");

        jLabelLanes.setText("Lanes");

        jSpinnerLanes.setModel(new javax.swing.SpinnerNumberModel(5, 2, 12, 1));
        jSpinnerLanes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerLanesStateChanged(evt);
            }
        });

        jLabelLength.setText("Length");

        jFormattedTextLength.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextLength.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jFormattedTextLength.setText("25");
        jFormattedTextLength.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextLengthFocusLost(evt);
            }
        });

        jLabelLengthM.setText("m");

        javax.swing.GroupLayout jPanelPoolLayout = new javax.swing.GroupLayout(jPanelPool);
        jPanelPool.setLayout(jPanelPoolLayout);
        jPanelPoolLayout.setHorizontalGroup(
            jPanelPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPoolLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSpinnerLanes)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPoolLayout.createSequentialGroup()
                        .addGroup(jPanelPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelLanes, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPool, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLength, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPoolLayout.createSequentialGroup()
                        .addComponent(jFormattedTextLength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLengthM)))
                .addContainerGap())
        );
        jPanelPoolLayout.setVerticalGroup(
            jPanelPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPoolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPool)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelLanes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerLanes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelLength)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLengthM))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonCancel.setBackground(new java.awt.Color(0, 204, 204));
        jButtonCancel.setMnemonic('c');
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonOk.setBackground(new java.awt.Color(0, 204, 204));
        jButtonOk.setMnemonic('k');
        jButtonOk.setText("Okay");
        jButtonOk.setEnabled(false);
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jLabelMsg.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelMsg.setForeground(new java.awt.Color(255, 0, 51));
        jLabelMsg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelMsg.setText("Message");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanelSwimmers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelPool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSwimmers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanelPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancel)
                        .addComponent(jButtonOk)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddSwimmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSwimmerActionPerformed
        final DialogCreateSwimmer swimmerCreator = new DialogCreateSwimmer(null, true);
        swimmerCreator.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                if (swimmerCreator.isOkay()) {
                    if (!competitionModel.addPerson(swimmerCreator.getSwimmer())) {
                        JOptionPane.showMessageDialog(null,
                                                      "Swimmer with the same name "
                                                      + "has already been added!",
                                                      "Cannot add swimmer",
                                                      JOptionPane.WARNING_MESSAGE);
                    }
                    jButtonOk.setEnabled(competitionModel.isValid());
                }
            }

        });
        swimmerCreator.setVisible(true);

    }//GEN-LAST:event_jButtonAddSwimmerActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        final DialogCreatePerson personCreator = new DialogCreatePerson(null, true);
        personCreator.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                if (personCreator.isOkay()) {
                    if (!competitionModel.addPerson(personCreator.getPerson())) {
                        JOptionPane.showMessageDialog(null,
                                                      "Person has already been added!",
                                                      "Cannot add person",
                                                      JOptionPane.WARNING_MESSAGE);
                    }
                    jButtonOk.setEnabled(competitionModel.isValid());
                }
            }

        });
        personCreator.setVisible(true);

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonRemoveSwimmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveSwimmerActionPerformed
        competitionModel.removeSwimmers(jListSwimmers.getSelectedIndices());
        jButtonOk.setEnabled(competitionModel.isValid());
    }//GEN-LAST:event_jButtonRemoveSwimmerActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        jPopupRemove.setLocation(jButtonRemove.getLocationOnScreen());
        jPopupRemove.setVisible(true);
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jMIRemoveJudgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRemoveJudgeActionPerformed
        competitionModel.removeJudges(jListJudges.getSelectedIndices());
        jButtonOk.setEnabled(competitionModel.isValid());
    }//GEN-LAST:event_jMIRemoveJudgeActionPerformed

    private void jMIRemoveSpectatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRemoveSpectatorActionPerformed
        competitionModel.removeSpectators(jListSpectators.getSelectedIndices());
        jButtonOk.setEnabled(competitionModel.isValid());
    }//GEN-LAST:event_jMIRemoveSpectatorActionPerformed

    private void jMIRemoveStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRemoveStaffActionPerformed
        competitionModel.removeSupportingStaffMembers(jListStaff.getSelectedIndices());
        jButtonOk.setEnabled(competitionModel.isValid());
    }//GEN-LAST:event_jMIRemoveStaffActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        okay = true;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jFormattedTextLengthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextLengthFocusLost
        int len = -1;
        try {
            len = Integer.parseInt(jFormattedTextLength.getText());
        } catch (Exception ex) {
            // Pass silently
        }
        competitionModel.setPoolLength(len);
        jButtonOk.setEnabled(competitionModel.isValid());
    }//GEN-LAST:event_jFormattedTextLengthFocusLost

    private void jSpinnerLanesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerLanesStateChanged
        competitionModel.setSwimLaneCount((int) jSpinnerLanes.getModel().getValue());
    }//GEN-LAST:event_jSpinnerLanesStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddSwimmer;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonRemoveSwimmer;
    private javax.swing.JFormattedTextField jFormattedTextLength;
    private javax.swing.JLabel jLabelJudges;
    private javax.swing.JLabel jLabelLanes;
    private javax.swing.JLabel jLabelLength;
    private javax.swing.JLabel jLabelLengthM;
    private javax.swing.JLabel jLabelMsg;
    private javax.swing.JLabel jLabelPool;
    private javax.swing.JLabel jLabelSpectators;
    private javax.swing.JLabel jLabelStaff;
    private javax.swing.JLabel jLabelSwimmers;
    private javax.swing.JList jListJudges;
    private javax.swing.JList jListSpectators;
    private javax.swing.JList jListStaff;
    private javax.swing.JList jListSwimmers;
    private javax.swing.JMenuItem jMIAddRandomJudge;
    private javax.swing.JMenuItem jMIAddRandomSpectator;
    private javax.swing.JMenuItem jMIAddRandomStaff;
    private javax.swing.JMenuItem jMIRemoveJudge;
    private javax.swing.JMenuItem jMIRemoveSpectator;
    private javax.swing.JMenuItem jMIRemoveStaff;
    private javax.swing.JPanel jPanelPeople;
    private javax.swing.JPanel jPanelPool;
    private javax.swing.JPanel jPanelSwimmers;
    private javax.swing.JPopupMenu jPopupAddRandom;
    private javax.swing.JPopupMenu jPopupRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinnerLanes;
    // End of variables declaration//GEN-END:variables

    /**
     * Tracks whether user selects the okay button in the GUI.
     *
     * @return whether user pressed the okay button.
     */
    public boolean isOkay() {
        return okay;
    }

    /**
     * Gets a competition object via ModelCreateCompetition.
     *
     * @return newly created competition object.
     */
    public SwimmingCompetition getCompetition() {
        return competitionModel.getObject();
    }
}
